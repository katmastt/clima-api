# Generated by Django 4.1.5 on 2023-03-01 15:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.TextField(blank=True, null=True)),
                ('opt_out_code', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analytics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthItem',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('created_at', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthItemChild',
            fields=[
                ('parent', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('child', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'auth_item_child',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthItemGroup',
            fields=[
                ('code', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_item_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthRule',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('created_at', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ColdStorageAutoaccept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage', models.FloatField(blank=True, null=True)),
                ('user_type', models.CharField(blank=True, max_length=15, null=True)),
                ('autoaccept_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cold_storage_autoaccept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ColdStorageLimits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage', models.BigIntegerField(blank=True, null=True)),
                ('user_type', models.CharField(blank=True, max_length=15, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('number_of_projects', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cold_storage_limits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ColdStorageRequest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('request_id', models.BigIntegerField(blank=True, null=True)),
                ('storage', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('additional_resources', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('vm_type', models.IntegerField(blank=True, null=True)),
                ('num_of_volumes', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cold_storage_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_num', models.IntegerField(blank=True, null=True)),
                ('home_page', models.IntegerField(blank=True, null=True)),
                ('privacy_page', models.IntegerField(blank=True, null=True)),
                ('help_page', models.IntegerField(blank=True, null=True)),
                ('schema_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'configuration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CronJob',
            fields=[
                ('id_cron_job', models.AutoField(primary_key=True, serialize=False)),
                ('controller', models.CharField(max_length=255)),
                ('action', models.CharField(max_length=255)),
                ('limit', models.IntegerField(blank=True, null=True)),
                ('offset', models.IntegerField(blank=True, null=True)),
                ('running', models.SmallIntegerField()),
                ('success', models.SmallIntegerField()),
                ('started_at', models.IntegerField(blank=True, null=True)),
                ('ended_at', models.IntegerField(blank=True, null=True)),
                ('last_execution_time', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cron_job',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_ids', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('project_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('user_creation', models.BooleanField(blank=True, null=True)),
                ('new_project', models.BooleanField(blank=True, null=True)),
                ('project_decision', models.BooleanField(blank=True, null=True)),
                ('new_ticket', models.BooleanField(blank=True, null=True)),
                ('expires_30', models.BooleanField(blank=True, null=True)),
                ('expires_15', models.BooleanField(blank=True, null=True)),
                ('edit_project', models.BooleanField(blank=True, null=True)),
                ('expires_1', models.BooleanField(blank=True, null=True)),
                ('expires_5', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailEventsAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('user_creation', models.BooleanField(blank=True, null=True)),
                ('new_ticket', models.BooleanField(blank=True, null=True)),
                ('expires_1', models.BooleanField(blank=True, null=True)),
                ('expires_5', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_events_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailEventsModerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('new_project', models.BooleanField(blank=True, null=True)),
                ('expires_30', models.BooleanField(blank=True, null=True)),
                ('expires_15', models.BooleanField(blank=True, null=True)),
                ('expires_1', models.BooleanField(blank=True, null=True)),
                ('expires_5', models.BooleanField(blank=True, null=True)),
                ('project_decision', models.BooleanField(blank=True, null=True)),
                ('edit_project', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_events_moderator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailEventsUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('project_decision', models.BooleanField(blank=True, null=True)),
                ('expires_1', models.BooleanField(blank=True, null=True)),
                ('expires_5', models.BooleanField(blank=True, null=True)),
                ('expires_30', models.BooleanField(blank=True, null=True)),
                ('expires_15', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_events_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HotVolumes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('project_id', models.BigIntegerField(blank=True, null=True)),
                ('volume_id', models.TextField(blank=True, null=True)),
                ('mountpoint', models.TextField(blank=True, null=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('vm_type', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.TextField(blank=True, null=True)),
                ('vm_id', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('mult_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hot_volumes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MachineComputeLimits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(blank=True, max_length=15, null=True)),
                ('number_of_projects', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'machine_compute_limits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MachineComputeRequest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('num_of_vms', models.SmallIntegerField(blank=True, null=True)),
                ('num_of_cores', models.SmallIntegerField(blank=True, null=True)),
                ('num_of_ips', models.SmallIntegerField(blank=True, null=True)),
                ('ram', models.FloatField(blank=True, null=True)),
                ('storage', models.FloatField(blank=True, null=True)),
                ('request_id', models.BigIntegerField(blank=True, null=True)),
                ('vm_flavour', models.TextField(blank=True, null=True)),
                ('disk', models.IntegerField(blank=True, null=True)),
                ('additional_resources', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'machine_compute_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migration',
            fields=[
                ('version', models.CharField(max_length=180, primary_key=True, serialize=False)),
                ('apply_time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'migration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OndemandAutoaccept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_of_jobs', models.IntegerField(blank=True, null=True)),
                ('cores', models.IntegerField(blank=True, null=True)),
                ('ram', models.FloatField(blank=True, null=True)),
                ('user_type', models.CharField(blank=True, max_length=15, null=True)),
                ('autoaccept_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ondemand_autoaccept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OndemandLimits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_of_jobs', models.IntegerField(blank=True, null=True)),
                ('cores', models.IntegerField(blank=True, null=True)),
                ('ram', models.FloatField(blank=True, null=True)),
                ('user_type', models.CharField(blank=True, max_length=15, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('number_of_projects', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ondemand_limits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OndemandRequest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('request_id', models.BigIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('maturity', models.TextField(blank=True, null=True)),
                ('analysis_type', models.CharField(blank=True, max_length=200, null=True)),
                ('containerized', models.BooleanField(blank=True, null=True)),
                ('num_of_jobs', models.IntegerField(blank=True, null=True)),
                ('ram', models.FloatField(blank=True, null=True)),
                ('cores', models.IntegerField(blank=True, null=True)),
                ('additional_resources', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ondemand_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Openstack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nova_url', models.TextField(blank=True, null=True)),
                ('keystone_url', models.TextField(blank=True, null=True)),
                ('cinder_url', models.TextField(blank=True, null=True)),
                ('neutron_url', models.TextField(blank=True, null=True)),
                ('glance_url', models.TextField(blank=True, null=True)),
                ('tenant_id', models.TextField(blank=True, null=True)),
                ('floating_net_id', models.TextField(blank=True, null=True)),
                ('cred_id', models.TextField(blank=True, null=True)),
                ('cred_secret', models.TextField(blank=True, null=True)),
                ('internal_net_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'openstack',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OpenstackMachines',
            fields=[
                ('nova_url', models.TextField(blank=True, null=True)),
                ('keystone_url', models.TextField(blank=True, null=True)),
                ('cinder_url', models.TextField(blank=True, null=True)),
                ('neutron_url', models.TextField(blank=True, null=True)),
                ('glance_url', models.TextField(blank=True, null=True)),
                ('tenant_id', models.TextField(blank=True, null=True)),
                ('floating_net_id', models.TextField(blank=True, null=True)),
                ('cred_id', models.TextField(blank=True, null=True)),
                ('cred_secret', models.TextField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('internal_net_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'openstack_machines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('latest_project_request_id', models.BigIntegerField(blank=True, null=True)),
                ('pending_request_id', models.BigIntegerField(blank=True, null=True)),
                ('project_type', models.SmallIntegerField(blank=True, null=True)),
                ('favorite', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectRequest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('user_num', models.IntegerField(blank=True, null=True)),
                ('user_list', models.TextField(blank=True, null=True)),
                ('backup_services', models.BooleanField(blank=True, null=True)),
                ('viewed', models.BooleanField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('submitted_by', models.IntegerField(blank=True, null=True)),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.BigIntegerField(blank=True, null=True)),
                ('project_type', models.SmallIntegerField(blank=True, null=True)),
                ('project_id', models.BigIntegerField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('deletion_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('additional_resources', models.TextField(blank=True, null=True)),
                ('louros', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceAutoaccept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vms', models.IntegerField(blank=True, null=True)),
                ('cores', models.IntegerField(blank=True, null=True)),
                ('ips', models.IntegerField(blank=True, null=True)),
                ('ram', models.FloatField(blank=True, null=True)),
                ('storage', models.FloatField(blank=True, null=True)),
                ('user_type', models.CharField(blank=True, max_length=15, null=True)),
                ('autoaccept_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'service_autoaccept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceLimits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vms', models.IntegerField(blank=True, null=True)),
                ('cores', models.IntegerField(blank=True, null=True)),
                ('ips', models.IntegerField(blank=True, null=True)),
                ('ram', models.FloatField(blank=True, null=True)),
                ('storage', models.FloatField(blank=True, null=True)),
                ('user_type', models.CharField(blank=True, max_length=15, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('number_of_projects', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'service_limits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Smtp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encryption', models.TextField(blank=True, null=True)),
                ('host', models.TextField(blank=True, null=True)),
                ('username', models.TextField(blank=True, null=True)),
                ('port', models.TextField(blank=True, null=True)),
                ('password', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'smtp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_user', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('client', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_body',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(db_column='fileName', max_length=255)),
                ('document_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ticket_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('page', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_head',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('auth_key', models.CharField(max_length=32)),
                ('password_hash', models.CharField(max_length=255)),
                ('confirmation_token', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField()),
                ('superadmin', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
                ('registration_ip', models.CharField(blank=True, max_length=15, null=True)),
                ('bind_to_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=128, null=True)),
                ('email_confirmed', models.SmallIntegerField()),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('surname', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserVisitLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255)),
                ('ip', models.CharField(max_length=15)),
                ('language', models.CharField(max_length=2)),
                ('user_agent', models.CharField(max_length=255)),
                ('visit_time', models.IntegerField()),
                ('browser', models.CharField(blank=True, max_length=30, null=True)),
                ('os', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'user_visit_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vm',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ip_address', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_id', models.TextField(blank=True, null=True)),
                ('vm_id', models.TextField(blank=True, null=True)),
                ('public_key', models.TextField(blank=True, null=True)),
                ('image_id', models.TextField(blank=True, null=True)),
                ('image_name', models.CharField(blank=True, max_length=100, null=True)),
                ('request_id', models.IntegerField()),
                ('active', models.BooleanField(blank=True, null=True)),
                ('keypair_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('volume_id', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('do_not_delete_disk', models.BooleanField(blank=True, null=True)),
                ('windows_unique_id', models.TextField(blank=True, null=True)),
                ('read_win_password', models.BooleanField(blank=True, null=True)),
                ('project_id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'vm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VmMachines',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ip_address', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_id', models.TextField(blank=True, null=True)),
                ('vm_id', models.TextField(blank=True, null=True)),
                ('public_key', models.TextField(blank=True, null=True)),
                ('image_id', models.TextField(blank=True, null=True)),
                ('image_name', models.CharField(blank=True, max_length=100, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('keypair_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('volume_id', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('do_not_delete_disk', models.BooleanField(blank=True, null=True)),
                ('windows_unique_id', models.TextField(blank=True, null=True)),
                ('read_win_password', models.BooleanField(blank=True, null=True)),
                ('project_id', models.BigIntegerField(blank=True, null=True)),
                ('project_multiple_order', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'vm_machines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthAssignment',
            fields=[
                ('item_name', models.OneToOneField(db_column='item_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.authitem')),
                ('created_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_assignment',
                'managed': False,
            },
        ),
    ]
